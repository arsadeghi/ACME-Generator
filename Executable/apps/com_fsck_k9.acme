//Automatically Generated by Covert Engine
import families/Android.acme;
system com.fsck.k9 : Android = new Android extended with {
   //List of Components 
   component AccessibleEmailContentActivity : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.AccessibleEmailContentActivity";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      
      
   };
   component Accounts : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.Accounts";
      property exported = true;
      property intentFilters = {
         "android.intent.action.MAIN", "android.intent.action.VIEW"
      };
      property state = Created;  
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      port ImplicitIntentBroadcastReceivePortT0 : ImplicitIntentBroadcastReceivePortT = new ImplicitIntentBroadcastReceivePortT;
      port ImplicitIntentBroadcastAnnouncerPortT0 : ImplicitIntentBroadcastAnnouncerPortT = new ImplicitIntentBroadcastAnnouncerPortT extended with {
        property action = "android.intent.action.VIEW";
        
      };
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property componentReference = "com.fsck.k9.activity.Accounts";
      };
      port ExplicitIntentCallPortT1 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property action = "importSettings";
        property componentReference = "com.fsck.k9.activity.Accounts";
      };
   };
   component ChooseFolder : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.ChooseFolder";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property componentReference = "com.fsck.k9.fragment.MessageListFragment";
      };
   };
   component ChooseIdentity : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.ChooseIdentity";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      
      
   };
   component EditIdentity : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.EditIdentity";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
   };
   component EmailAddressList : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.EmailAddressList";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property componentReference = "com.fsck.k9.activity.MessageCompose";
      };
   };
   component FolderList : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.FolderList";
      property exported = true;
      property intentFilters = {
         "android.intent.action.MAIN"
      };
      property state = Created;  
      
      
      
      port ImplicitIntentBroadcastReceivePortT0 : ImplicitIntentBroadcastReceivePortT = new ImplicitIntentBroadcastReceivePortT;
   };
   component LauncherShortcuts : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.LauncherShortcuts";
      property exported = true;
      property intentFilters = {
         "android.intent.action.CREATE_SHORTCUT"
      };
      property state = Created;  
      
      
      
      port ImplicitIntentBroadcastReceivePortT0 : ImplicitIntentBroadcastReceivePortT = new ImplicitIntentBroadcastReceivePortT;
   };
   component ManageIdentities : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.ManageIdentities";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property componentReference = "com.fsck.k9.activity.EditIdentity";
      };
   };
   component MessageCompose : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.MessageCompose";
      property exported = true;
      property intentFilters = {
         "android.intent.action.SEND_MULTIPLE", "android.intent.action.SENDTO", "android.intent.action.VIEW", "android.intent.action.SEND"
      };
      property state = Created;  
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      port ImplicitIntentBroadcastReceivePortT0 : ImplicitIntentBroadcastReceivePortT = new ImplicitIntentBroadcastReceivePortT;
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property action = "com.fsck.k9.intent.action.COMPOSE";
        property componentReference = "com.fsck.k9.activity.MessageCompose";
      };
      port ExplicitIntentCallPortT1 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property componentReference = "com.fsck.k9.activity.EmailAddressList";
      };
      port ExplicitIntentCallPortT2 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property action = "com.fsck.k9.intent.action.FORWARD";
        property componentReference = "com.fsck.k9.activity.MessageCompose";
      };
      port ExplicitIntentCallPortT3 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property action = "com.fsck.k9.intent.action.EDIT_DRAFT";
        property componentReference = "com.fsck.k9.activity.MessageCompose";
      };
      port ExplicitIntentCallPortT4 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property componentReference = "com.fsck.k9.activity.Accounts";
      };
   };
   component MessageList : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.MessageList";
      property exported = true;
      property intentFilters = {
         "android.intent.action.MAIN", "android.intent.action.VIEW"
      };
      property state = Created;  
      
      
      
      port ImplicitIntentBroadcastReceivePortT0 : ImplicitIntentBroadcastReceivePortT = new ImplicitIntentBroadcastReceivePortT;
   };
   component NotificationDeleteConfirmation : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.NotificationDeleteConfirmation";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      
      
   };
   component Search : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.Search";
      property exported = true;
      property intentFilters = {
         "android.intent.action.SEARCH"
      };
      property state = Created;  
      
      
      
      port ImplicitIntentBroadcastReceivePortT0 : ImplicitIntentBroadcastReceivePortT = new ImplicitIntentBroadcastReceivePortT;
   };
   component UnreadWidgetConfiguration : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.UnreadWidgetConfiguration";
      property exported = true;
      property intentFilters = {
         "android.appwidget.action.APPWIDGET_CONFIGURE"
      };
      property state = Created;  
      
      
      
      port ImplicitIntentBroadcastReceivePortT0 : ImplicitIntentBroadcastReceivePortT = new ImplicitIntentBroadcastReceivePortT;
   };
   component UpgradeDatabases : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.UpgradeDatabases";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property action = "upgrade_databases";
        property componentReference = "com.fsck.k9.activity.UpgradeDatabases";
      };
   };
   component AccountSettings : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.setup.AccountSettings";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property componentReference = "com.fsck.k9.activity.ManageIdentities";
      };
      port ExplicitIntentCallPortT1 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property componentReference = "com.fsck.k9.activity.setup.AccountSettings";
      };
      port ExplicitIntentCallPortT2 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property componentReference = "com.fsck.k9.activity.ChooseFolder";
      };
   };
   component AccountSetupAccountType : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.setup.AccountSetupAccountType";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property componentReference = "com.fsck.k9.activity.setup.AccountSetupAccountType";
      };
   };
   component AccountSetupBasics : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.setup.AccountSetupBasics";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property componentReference = "com.fsck.k9.activity.setup.AccountSetupBasics";
      };
   };
   component AccountSetupCheckSettings : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.setup.AccountSetupCheckSettings";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property componentReference = "com.fsck.k9.activity.setup.AccountSetupCheckSettings";
      };
   };
   component AccountSetupComposition : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.setup.AccountSetupComposition";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property action = "android.intent.action.EDIT";
        property componentReference = "com.fsck.k9.activity.setup.AccountSetupComposition";
      };
   };
   component AccountSetupIncoming : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.setup.AccountSetupIncoming";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property componentReference = "com.fsck.k9.activity.setup.AccountSetupIncoming";
      };
   };
   component AccountSetupNames : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.setup.AccountSetupNames";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property componentReference = "com.fsck.k9.activity.setup.AccountSetupNames";
      };
   };
   component AccountSetupOptions : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.setup.AccountSetupOptions";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property componentReference = "com.fsck.k9.activity.setup.AccountSetupOptions";
      };
   };
   component AccountSetupOutgoing : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.setup.AccountSetupOutgoing";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property componentReference = "com.fsck.k9.activity.setup.AccountSetupOutgoing";
      };
   };
   component FolderSettings : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.setup.FolderSettings";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property componentReference = "com.fsck.k9.activity.setup.FolderSettings";
      };
   };
   component FontSizeSettings : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.setup.FontSizeSettings";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property componentReference = "com.fsck.k9.activity.setup.FontSizeSettings";
      };
   };
   component Prefs : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.setup.Prefs";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property componentReference = "com.fsck.k9.activity.setup.Prefs";
      };
   };
   component WelcomeMessage : ActivityComponentT = new ActivityComponentT extended with {
      property class = "com.fsck.k9.activity.setup.WelcomeMessage";
      property exported = false;
      property intentFilters = {
         
      };
      property state = Created;  
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property componentReference = "com.fsck.k9.activity.setup.WelcomeMessage";
      };
   };
   component AttachmentProvider : ContentProviderComponentT = new ContentProviderComponentT extended with {
      property class = "com.fsck.k9.provider.AttachmentProvider";
      property exported = false;
      property intentFilters = {
         
      };
        
      
      
      port ContentProviderResponsePortT : ContentProviderResponsePortT = new ContentProviderResponsePortT;
      
      
   };
   component EmailProvider : ContentProviderComponentT = new ContentProviderComponentT extended with {
      property class = "com.fsck.k9.provider.EmailProvider";
      property exported = false;
      property intentFilters = {
         
      };
        
      
      
      port ContentProviderResponsePortT : ContentProviderResponsePortT = new ContentProviderResponsePortT;
      
      
   };
   component MessageProvider : ContentProviderComponentT = new ContentProviderComponentT extended with {
      property class = "com.fsck.k9.provider.MessageProvider";
      property exported = false;
      property intentFilters = {
         
      };
        
      
      
      port ContentProviderResponsePortT : ContentProviderResponsePortT = new ContentProviderResponsePortT;
      
      
   };
   component UnreadWidgetProvider : BroadcastReceiverComponentT = new BroadcastReceiverComponentT extended with {
      property class = "com.fsck.k9.provider.UnreadWidgetProvider";
      property exported = true;
      property intentFilters = {
         "android.appwidget.action.APPWIDGET_UPDATE"
      };
        
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      port ImplicitIntentBroadcastReceivePortT0 : ImplicitIntentBroadcastReceivePortT = new ImplicitIntentBroadcastReceivePortT;
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property action = "android.appwidget.action.APPWIDGET_UPDATE";
        property componentReference = "com.fsck.k9.provider.UnreadWidgetProvider";
      };
   };
   component BootReceiver : BroadcastReceiverComponentT = new BroadcastReceiverComponentT extended with {
      property class = "com.fsck.k9.service.BootReceiver";
      property exported = true;
      property intentFilters = {
         "com.android.sync.SYNC_CONN_STATUS_CHANGED", "com.fsck.k9.service.BroadcastReceiver.scheduleIntent", "android.intent.action.DEVICE_STORAGE_LOW", "android.intent.action.DEVICE_STORAGE_OK", "android.intent.action.BOOT_COMPLETED", "android.net.conn.BACKGROUND_DATA_SETTING_CHANGED", "android.net.conn.CONNECTIVITY_CHANGE"
      };
        
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      port ImplicitIntentBroadcastReceivePortT0 : ImplicitIntentBroadcastReceivePortT = new ImplicitIntentBroadcastReceivePortT;
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property action = "hasValue";
        property componentReference = "com.fsck.k9.service.BootReceiver";
      };
   };
   component CoreReceiver : BroadcastReceiverComponentT = new BroadcastReceiverComponentT extended with {
      property class = "com.fsck.k9.service.CoreReceiver";
      property exported = true;
      property intentFilters = {
         "com.fsck.k9.service.CoreReceiver.wakeLockRelease"
      };
        
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      port ImplicitIntentBroadcastReceivePortT0 : ImplicitIntentBroadcastReceivePortT = new ImplicitIntentBroadcastReceivePortT;
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property action = "hasValue";
        property componentReference = "com.fsck.k9.service.CoreReceiver";
      };
   };
   component DatabaseUpgradeService : ServiceComponentT = new ServiceComponentT extended with {
      property class = "com.fsck.k9.service.DatabaseUpgradeService";
      property exported = false;
      property intentFilters = {
         
      };
        
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property action = "com.fsck.k9.service.DatabaseUpgradeService.startService";
        property componentReference = "com.fsck.k9.service.DatabaseUpgradeService";
      };
   };
   component MailService : ServiceComponentT = new ServiceComponentT extended with {
      property class = "com.fsck.k9.service.MailService";
      property exported = false;
      property intentFilters = {
         
      };
        
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property action = "com.fsck.k9.intent.action.MAIL_SERVICE_CONNECTIVITY_CHANGE";
        property componentReference = "com.fsck.k9.service.MailService";
      };
      port ExplicitIntentCallPortT1 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property action = "com.fsck.k9.intent.action.MAIL_SERVICE_CANCEL";
        property componentReference = "com.fsck.k9.service.MailService";
      };
      port ExplicitIntentCallPortT2 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property action = "com.fsck.k9.intent.action.MAIL_SERVICE_RESCHEDULE_POLL";
        property componentReference = "com.fsck.k9.service.MailService";
      };
      port ExplicitIntentCallPortT3 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property action = "com.fsck.k9.intent.action.MAIL_SERVICE_RESTART_PUSHERS";
        property componentReference = "com.fsck.k9.service.MailService";
      };
      port ExplicitIntentCallPortT4 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property action = "com.fsck.k9.intent.action.MAIL_SERVICE_RESET";
        property componentReference = "com.fsck.k9.service.MailService";
      };
   };
   component NotificationActionService : ServiceComponentT = new ServiceComponentT extended with {
      property class = "com.fsck.k9.service.NotificationActionService";
      property exported = false;
      property intentFilters = {
         
      };
        
      
      
      
      
   };
   component PollService : ServiceComponentT = new ServiceComponentT extended with {
      property class = "com.fsck.k9.service.PollService";
      property exported = false;
      property intentFilters = {
         
      };
        
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property action = "hasValue";
        property componentReference = "com.fsck.k9.service.PollService";
      };
   };
   component PushService : ServiceComponentT = new ServiceComponentT extended with {
      property class = "com.fsck.k9.service.PushService";
      property exported = false;
      property intentFilters = {
         
      };
        
      
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property action = "hasValue";
        property componentReference = "com.fsck.k9.service.PushService";
      };
   };
   component RemoteControlReceiver : BroadcastReceiverComponentT = new BroadcastReceiverComponentT extended with {
      property class = "com.fsck.k9.service.RemoteControlReceiver";
      property exported = true;
      property intentFilters = {
         "com.fsck.k9.K9RemoteControl.set", "com.fsck.k9.K9RemoteControl.requestAccounts"
      };
        
      property permission = "REMOTE_CONTROL";
      
      
      port ImplicitIntentBroadcastReceivePortT0 : ImplicitIntentBroadcastReceivePortT = new ImplicitIntentBroadcastReceivePortT;
   };
   component RemoteControlService : ServiceComponentT = new ServiceComponentT extended with {
      property class = "com.fsck.k9.service.RemoteControlService";
      property exported = false;
      property intentFilters = {
         
      };
        
      property permission = "REMOTE_CONTROL";
      
      port ExplicitIntentResponsePortT0 : ExplicitIntentResponsePortT = new ExplicitIntentResponsePortT;
      
      port ExplicitIntentCallPortT0 : ExplicitIntentCallPortT = new ExplicitIntentCallPortT extended with {
        property action = "com.fsck.k9.service.RemoteControlService.SET_ACTION";
        property componentReference = "com.fsck.k9.service.RemoteControlService";
      };
   };
   component SleepService : ServiceComponentT = new ServiceComponentT extended with {
      property class = "com.fsck.k9.service.SleepService";
      property exported = false;
      property intentFilters = {
         
      };
        
      
      
      
      
   };
   component StorageReceiver : BroadcastReceiverComponentT = new BroadcastReceiverComponentT extended with {
      property class = "com.fsck.k9.service.StorageReceiver";
      property exported = true;
      property intentFilters = {
         "android.intent.action.MEDIA_MOUNTED"
      };
        
      
      
      
      port ImplicitIntentBroadcastReceivePortT0 : ImplicitIntentBroadcastReceivePortT = new ImplicitIntentBroadcastReceivePortT;
   };
   
   //List of Explicit Connectors 
   connector IntentCallResponseConnectorT0 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT1 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT2 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT3 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT4 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT5 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT6 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT7 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT8 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT9 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT10 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT11 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT12 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT13 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT14 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT15 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT16 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT17 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT18 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT19 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT20 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT21 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT22 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT23 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT24 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT25 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT26 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT27 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT28 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT29 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT30 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT31 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT32 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT33 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT34 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT35 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT36 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   connector IntentCallResponseConnectorT37 : IntentCallResponseConnectorT = new IntentCallResponseConnectorT extended with {
    role response : ExplicitIntentResponseRoleT = new ExplicitIntentResponseRoleT;
    role call : ExplicitIntentCallRoleT = new ExplicitIntentCallRoleT;
   };    
   
   //List of Content Provier Connectors 

   //Implicit Intent Bus Connector
   connector ImplicitIntentBus : IntentBusT = new IntentBusT extended with {
     role ImplicitIntentBroadcastReceiveRoleT0 : ImplicitIntentBroadcastReceiveRoleT = new ImplicitIntentBroadcastReceiveRoleT;
     role ImplicitIntentBroadcastAnnounceRoleT0 : ImplicitIntentBroadcastAnnounceRoleT = new ImplicitIntentBroadcastAnnounceRoleT;
     role ImplicitIntentBroadcastReceiveRoleT1 : ImplicitIntentBroadcastReceiveRoleT = new ImplicitIntentBroadcastReceiveRoleT;
     role ImplicitIntentBroadcastReceiveRoleT2 : ImplicitIntentBroadcastReceiveRoleT = new ImplicitIntentBroadcastReceiveRoleT;
     role ImplicitIntentBroadcastReceiveRoleT3 : ImplicitIntentBroadcastReceiveRoleT = new ImplicitIntentBroadcastReceiveRoleT;
     role ImplicitIntentBroadcastReceiveRoleT4 : ImplicitIntentBroadcastReceiveRoleT = new ImplicitIntentBroadcastReceiveRoleT;
     role ImplicitIntentBroadcastReceiveRoleT5 : ImplicitIntentBroadcastReceiveRoleT = new ImplicitIntentBroadcastReceiveRoleT;
     role ImplicitIntentBroadcastReceiveRoleT6 : ImplicitIntentBroadcastReceiveRoleT = new ImplicitIntentBroadcastReceiveRoleT;
     role ImplicitIntentBroadcastReceiveRoleT7 : ImplicitIntentBroadcastReceiveRoleT = new ImplicitIntentBroadcastReceiveRoleT;
     role ImplicitIntentBroadcastReceiveRoleT8 : ImplicitIntentBroadcastReceiveRoleT = new ImplicitIntentBroadcastReceiveRoleT;
     role ImplicitIntentBroadcastReceiveRoleT9 : ImplicitIntentBroadcastReceiveRoleT = new ImplicitIntentBroadcastReceiveRoleT;
     role ImplicitIntentBroadcastReceiveRoleT10 : ImplicitIntentBroadcastReceiveRoleT = new ImplicitIntentBroadcastReceiveRoleT;
     role ImplicitIntentBroadcastReceiveRoleT11 : ImplicitIntentBroadcastReceiveRoleT = new ImplicitIntentBroadcastReceiveRoleT;
   };
    
   //Components to Connectors Attachments
   attachment Accounts.ImplicitIntentBroadcastReceivePortT0 to ImplicitIntentBus.ImplicitIntentBroadcastReceiveRoleT0;
   attachment Accounts.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT0.call;
   attachment Accounts.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT0.response;
   attachment Accounts.ImplicitIntentBroadcastAnnouncerPortT0 to ImplicitIntentBus.ImplicitIntentBroadcastAnnounceRoleT0;
   attachment Accounts.ExplicitIntentCallPortT1 to IntentCallResponseConnectorT1.call;
   attachment Accounts.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT1.response;
   attachment ChooseFolder.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT2.call;
   attachment MessageListFragment.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT2.response;
   attachment EmailAddressList.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT3.call;
   attachment MessageCompose.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT3.response;
   attachment FolderList.ImplicitIntentBroadcastReceivePortT0 to ImplicitIntentBus.ImplicitIntentBroadcastReceiveRoleT1;
   attachment LauncherShortcuts.ImplicitIntentBroadcastReceivePortT0 to ImplicitIntentBus.ImplicitIntentBroadcastReceiveRoleT2;
   attachment ManageIdentities.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT4.call;
   attachment EditIdentity.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT4.response;
   attachment MessageCompose.ImplicitIntentBroadcastReceivePortT0 to ImplicitIntentBus.ImplicitIntentBroadcastReceiveRoleT3;
   attachment MessageCompose.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT5.call;
   attachment MessageCompose.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT5.response;
   attachment MessageCompose.ExplicitIntentCallPortT1 to IntentCallResponseConnectorT6.call;
   attachment EmailAddressList.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT6.response;
   attachment MessageCompose.ExplicitIntentCallPortT2 to IntentCallResponseConnectorT7.call;
   attachment MessageCompose.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT7.response;
   attachment MessageCompose.ExplicitIntentCallPortT3 to IntentCallResponseConnectorT8.call;
   attachment MessageCompose.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT8.response;
   attachment MessageCompose.ExplicitIntentCallPortT4 to IntentCallResponseConnectorT9.call;
   attachment Accounts.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT9.response;
   attachment MessageList.ImplicitIntentBroadcastReceivePortT0 to ImplicitIntentBus.ImplicitIntentBroadcastReceiveRoleT4;
   attachment Search.ImplicitIntentBroadcastReceivePortT0 to ImplicitIntentBus.ImplicitIntentBroadcastReceiveRoleT5;
   attachment UnreadWidgetConfiguration.ImplicitIntentBroadcastReceivePortT0 to ImplicitIntentBus.ImplicitIntentBroadcastReceiveRoleT6;
   attachment UpgradeDatabases.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT10.call;
   attachment UpgradeDatabases.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT10.response;
   attachment AccountSettings.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT11.call;
   attachment ManageIdentities.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT11.response;
   attachment AccountSettings.ExplicitIntentCallPortT1 to IntentCallResponseConnectorT12.call;
   attachment AccountSettings.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT12.response;
   attachment AccountSettings.ExplicitIntentCallPortT2 to IntentCallResponseConnectorT13.call;
   attachment ChooseFolder.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT13.response;
   attachment AccountSetupAccountType.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT14.call;
   attachment AccountSetupAccountType.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT14.response;
   attachment AccountSetupBasics.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT15.call;
   attachment AccountSetupBasics.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT15.response;
   attachment AccountSetupCheckSettings.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT16.call;
   attachment AccountSetupCheckSettings.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT16.response;
   attachment AccountSetupComposition.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT17.call;
   attachment AccountSetupComposition.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT17.response;
   attachment AccountSetupIncoming.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT18.call;
   attachment AccountSetupIncoming.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT18.response;
   attachment AccountSetupNames.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT19.call;
   attachment AccountSetupNames.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT19.response;
   attachment AccountSetupOptions.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT20.call;
   attachment AccountSetupOptions.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT20.response;
   attachment AccountSetupOutgoing.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT21.call;
   attachment AccountSetupOutgoing.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT21.response;
   attachment FolderSettings.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT22.call;
   attachment FolderSettings.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT22.response;
   attachment FontSizeSettings.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT23.call;
   attachment FontSizeSettings.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT23.response;
   attachment Prefs.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT24.call;
   attachment Prefs.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT24.response;
   attachment WelcomeMessage.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT25.call;
   attachment WelcomeMessage.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT25.response;
   attachment UnreadWidgetProvider.ImplicitIntentBroadcastReceivePortT0 to ImplicitIntentBus.ImplicitIntentBroadcastReceiveRoleT7;
   attachment UnreadWidgetProvider.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT26.call;
   attachment UnreadWidgetProvider.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT26.response;
   attachment BootReceiver.ImplicitIntentBroadcastReceivePortT0 to ImplicitIntentBus.ImplicitIntentBroadcastReceiveRoleT8;
   attachment BootReceiver.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT27.call;
   attachment BootReceiver.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT27.response;
   attachment CoreReceiver.ImplicitIntentBroadcastReceivePortT0 to ImplicitIntentBus.ImplicitIntentBroadcastReceiveRoleT9;
   attachment CoreReceiver.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT28.call;
   attachment CoreReceiver.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT28.response;
   attachment DatabaseUpgradeService.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT29.call;
   attachment DatabaseUpgradeService.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT29.response;
   attachment MailService.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT30.call;
   attachment MailService.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT30.response;
   attachment MailService.ExplicitIntentCallPortT1 to IntentCallResponseConnectorT31.call;
   attachment MailService.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT31.response;
   attachment MailService.ExplicitIntentCallPortT2 to IntentCallResponseConnectorT32.call;
   attachment MailService.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT32.response;
   attachment MailService.ExplicitIntentCallPortT3 to IntentCallResponseConnectorT33.call;
   attachment MailService.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT33.response;
   attachment MailService.ExplicitIntentCallPortT4 to IntentCallResponseConnectorT34.call;
   attachment MailService.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT34.response;
   attachment PollService.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT35.call;
   attachment PollService.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT35.response;
   attachment PushService.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT36.call;
   attachment PushService.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT36.response;
   attachment RemoteControlReceiver.ImplicitIntentBroadcastReceivePortT0 to ImplicitIntentBus.ImplicitIntentBroadcastReceiveRoleT10;
   attachment RemoteControlService.ExplicitIntentCallPortT0 to IntentCallResponseConnectorT37.call;
   attachment RemoteControlService.ExplicitIntentResponsePortT0 to IntentCallResponseConnectorT37.response;
   attachment StorageReceiver.ImplicitIntentBroadcastReceivePortT0 to ImplicitIntentBus.ImplicitIntentBroadcastReceiveRoleT11;
       
   
   group com.fsck.k9 : AndroidApplicationGroupT = new AndroidApplicationGroupT extended with {
    property usesPermissions = {
         "WRITE_EXTERNAL_STORAGE","INTERNET","RECEIVE_BOOT_COMPLETED","READ_KEY_DETAILS","READ_SYNC_SETTINGS","DELETE_MESSAGES","READ_ATTACHMENT","ACCESS_NETWORK_STATE","WAKE_LOCK","READ_MESSAGES","READ_CONTACTS","WRITE_CONTACTS","VIBRATE","REMOTE_CONTROL"};
    members {
         AccessibleEmailContentActivity,Accounts,ChooseFolder,ChooseIdentity,EditIdentity,EmailAddressList,FolderList,LauncherShortcuts,ManageIdentities,MessageCompose,MessageList,NotificationDeleteConfirmation,Search,UnreadWidgetConfiguration,UpgradeDatabases,AccountSettings,AccountSetupAccountType,AccountSetupBasics,AccountSetupCheckSettings,AccountSetupComposition,AccountSetupIncoming,AccountSetupNames,AccountSetupOptions,AccountSetupOutgoing,FolderSettings,FontSizeSettings,Prefs,WelcomeMessage,AttachmentProvider,EmailProvider,MessageProvider,UnreadWidgetProvider,BootReceiver,CoreReceiver,DatabaseUpgradeService,MailService,NotificationActionService,PollService,PushService,RemoteControlReceiver,RemoteControlService,SleepService,StorageReceiver}};
}